name: Release

on:
  push:
    tags:
      - v*

jobs:
  draft:
    runs-on: ubuntu-latest

    steps:
      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true

  release:
    runs-on: ${{ matrix.os }}

    needs: draft

    strategy:
      matrix:
        os:
          - macos-latest
          - windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Node.js environment
        uses: actions/setup-node@v1.4.2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: Install yarn dependencies
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn run build

      - name: Package
        run: yarn run dist
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
          ASC_PROVIDER: ${{ secrets.ASC_PROVIDER }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
